<?php

/**
 * DO NOT EDIT !!!
 *
 * the contents of this file were autogenerated on http://jan on 2010-11-26 20:29:56
 *
 */
// RPC protocol and value object classes

/**

  List of classes and files

  Foomo\Services\RPC\Serializer\SerializerInterface from : /private/var/www/jan/modules/services/lib/Rad/Services/RPC/Serializer/SerializerInterface.php
  Foomo\Services\RPC\Protocol\AbstractHead from : /private/var/www/jan/modules/services/lib/Rad/Services/RPC/Protocol/AbstractHead.php
  Foomo\Services\RPC\Client from : /private/var/www/jan/modules/services/lib/Rad/Services/RPC/Client.php
  Foomo\Services\RPC\Protocol\Call from : /private/var/www/jan/modules/services/lib/Rad/Services/RPC/Protocol/Call.php
  Foomo\Services\RPC\Protocol\Call\Head from : /private/var/www/jan/modules/services/lib/Rad/Services/RPC/Protocol/Call/Head.php
  Foomo\Services\RPC\Protocol\Call\MethodCall from : /private/var/www/jan/modules/services/lib/Rad/Services/RPC/Protocol/Call/MethodCall.php
  Foomo\Services\RPC\Protocol\Reply\MethodReply from : /private/var/www/jan/modules/services/lib/Rad/Services/RPC/Protocol/Reply/MethodReply.php
  Foomo\Services\RPC\Protocol\Reply\Exception from : /private/var/www/jan/modules/services/lib/Rad/Services/RPC/Protocol/Reply/Exception.php
  Foomo\Services\RPC\Protocol\Reply from : /private/var/www/jan/modules/services/lib/Rad/Services/RPC/Protocol/Reply.php
  Foomo\Services\RPC\Protocol\Reply\Head from : /private/var/www/jan/modules/services/lib/Rad/Services/RPC/Protocol/Reply/Head.php
  Foomo\Services\RPC\Serializer\PHP from : /private/var/www/jan/modules/services/lib/Rad/Services/RPC/Serializer/PHP.php
  Foomo\Services\Mock\Exception from : /private/var/www/jan/modules/services/tests/Rad/Services/Mock/Exception.php
  Foomo\Services\Mock\FunkyStar from : /private/var/www/jan/modules/services/tests/Rad/Services/Mock/FunkyStar.php
  Foomo\Services\Mock\Message from : /private/var/www/jan/modules/services/tests/Rad/Services/Mock/Message.php
  Foomo\Services\Mock\FunkyStar from : /private/var/www/jan/modules/services/tests/Rad/Services/Mock/FunkyStar.php

 */

namespace Foomo\Services\Mock;

class ServiceProxy extends \Foomo\Services\RPC\Client {
	const VERSION = 1;
	/**
	 * construct a client
	 *
	 * @param RPCSerializerInterface $serializer
	 * @param string $targetClass name of the class to talk to
	 * @param string $endPoint uri of the service
	 */
	public function __construct()
	{
		$endPoint = \Foomo\Utils::getServerUrl() . \Foomo\ROOT_HTTP . '/modules/' . \Foomo\Services\Module::NAME . '/services/mockService.php/Foomo.Services.RPC/serve';
		$targetClass = 'Foomo\Services\Mock\Service';
		$serializer = new \Foomo\Services\RPC\Serializer\PHP();
		parent::__construct($serializer, $targetClass, $endPoint);
	}

	/**
	 * add two numbers
	 *
	 * @param integer $numberOne
	 * @param integer $numberTwo
	 *
	 * @return integer the sum of the two numbers
	 */
	public function addNumbers($numberOne, $numberTwo)
	{
		return $this->callServer(self::VERSION, 'addNumbers', array($numberOne, $numberTwo));
	}

	/**
	 * generate an exception
	 *
	 * @return boolean it will pop an exception anyways
	 */
	public function makeException()
	{
		return $this->callServer(self::VERSION, 'makeException', array());
	}

	/**
	 * test a funky star
	 *
	 * @param Foomo\Services\Mock\FunkyStar $star
	 *
	 * @return Foomo\Services\Mock\FunkyStar[]
	 */
	public function getSomeFunkyStars(Foomo\Services\Mock\FunkyStar $star)
	{
		return $this->callServer(self::VERSION, 'getSomeFunkyStars', array($star));
	}

	/**
	 * session test
	 *
	 * @return integer
	 */
	public function iPlusPlus()
	{
		return $this->callServer(self::VERSION, 'iPlusPlus', array());
	}

	public function __call($name, $arguments)
	{
		throw new Exception('function ' . $name . ' does not exist - maybe you need to recompile and update your client', 1);
	}

}